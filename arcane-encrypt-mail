#! /usr/bin/env python
""" arcane-encrypt-mail

Reads an E-Mail from Standard Input, encrypts it with given GPG Key and
writes encrypted E-Mail to Standard Output

The MIT License (MIT)

Copyright (c) 2013 Matthias Fassl <mf@n0g.at>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"""

import sys
import getopt
import email
from util import Util
from gpg import GPGDecryption
from gpg import GPGEncryption

def main(argv=None):
	if argv==None:
		argv = sys.argv

	# parse option
	key = ""
	try:
		optlist, args = getopt.getopt(sys.argv[1:],"k:",["key="])
	except getopt.GetoptError as err:
		usage()
		return 2

	for o, a in optlist:
		if o in ("-k","--key"):
			key = a
		else:
			usage()
			return 1
	
	if key == "":
		print >> sys.stderr, "Encryption not possible without key identifier\n"
		usage()
		return 1

	# read email from stdin
	email_lines = sys.stdin.readlines()
	email_data = ''.join(email_lines)
	email_obj = email.message_from_string(email_data)

	# encrypt mail
	email_encrypted = GPGEncryption().encryptPGP(email_obj,key)

	# print mail
	print Util.flattenMessage(email_encrypted)

def usage():
	print >> sys.stderr, "Usage: arcane-encrypt-mail -k Key-Identifier"
	print >> sys.stderr, "\t-k,--key\tIdentifier of the public GPG key that will be used to encrypt the E-Mail"
	
if __name__  == "__main__":
	sys.exit(main())
